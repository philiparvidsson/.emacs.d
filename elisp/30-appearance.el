;; Disable GUI stuff that I don't want or need.
(menu-bar-mode -1)
(scroll-bar-mode -1)
(tool-bar-mode -1)
(tooltip-mode -1)

;; Display line numbers (Emacs 26+).
;; (add-hook 'prog-mode-hook
;;           (lambda ()
;;             (setq display-line-numbers-width 3) ; <-- Prevent 'jump' in margin size at 100 LOC.
;;             (display-line-numbers-mode t)))

;; More visual ease by increasing the line spacing.
(setq-default line-spacing 4)

;; Disable fringes (they don't work well with high-DPI displays anyway).
(fringe-mode 0)

;; Set frame title.
(setq frame-title-format '("%b"))

;; No startup message or welcome screen.
(setq inhibit-startup-echo-area-message t
      inhibit-startup-screen t)

;; Don't blink the cursor.
(blink-cursor-mode -1)

;; Display keyboard shortcuts quickly in the echo area.
(setq echo-keystrokes 0.1)

;; Custom bell function that inverts the mode line for a short period of time, making it flash once.
(setq ring-bell-function
      (lambda ()
	(invert-face 'mode-line)
	(run-with-timer 0.05 nil 'invert-face 'mode-line)))

;; Show column- and line numbers in mode line, as well as file size.
(column-number-mode t)
(line-number-mode t)
(size-indication-mode t)

;; Highlight matching parentheses.
(show-paren-mode t)

;; Hide some modes from the mode line - I don't need to see them.
(with-eval-after-load "abbrev"             (diminish 'abbrev-mode))
(with-eval-after-load "auto-fill-function" (diminish 'auto-fill-function))
(with-eval-after-load "company"            (diminish 'company-mode))
(with-eval-after-load "eldoc"              (diminish 'eldoc-mode))
;;(with-eval-after-load "flycheck"           (diminish 'flycheck-mode)) ;; <-- Only with `spaceline'!
(with-eval-after-load "omnisharp"          (diminish 'omnisharp-mode))
(with-eval-after-load "projectile"         (diminish 'projectile-mode))
(with-eval-after-load "rainbow-mode"       (diminish 'rainbow-mode))
(with-eval-after-load "subword"            (diminish 'subword-mode))
(with-eval-after-load "tide"               (diminish 'tide-mode))
(with-eval-after-load "whitespace"         (diminish 'whitespace-mode))
(with-eval-after-load "xah-math-input"     (diminish 'xah-math-input-mode))
;;(add-hook 'auto-revert-mode-hook '(diminish 'auto-revert-mode)) ;; <-- Doesn't seem to be needed?

;; Set initial frame size and font.
(setq default-frame-alist
      '((width  . 104)
	(height . 36)
	(font   . "Consolas-12")
	nil))


;; Center frame on display.
(add-hook 'window-setup-hook
          (lambda ()
            (let ((frame (selected-frame)))
              (set-frame-position
               frame
               (/ (- (display-pixel-width) (frame-outer-width frame)) 2)
               (/ (- (display-pixel-height) (frame-outer-height frame)) 2)))))

;; Set up pretty symbols.
(add-hook 'prog-mode-hook
          (lambda ()
            (setq prettify-symbols-unprettify-at-point t)
            (mapc (lambda (it)
                    (push it prettify-symbols-alist))
                  '(("!!"      .    "‼")
                    ("!="      .    "≠")
                    ("&&"      .    "∧")
                    ("->"      .    "→")
                    ("/="      .    "≠")
                    ("<-"      .    "←")
                    ("<<"      .    "≪")
                    ("<<<"     .    "⋘")
                    ("<="      .    "≤")
                    ("<=>"     .    "⇔")
                    ("<>"      .    "◇")
                    ("<|"      .    "◁")
                    ("<~"      .    "⇜")
                    ("<~>"     .    "↭")
                    ("<~~"     .    "⬳")
                    ("=="      .    "＝")
                    ("==="     .    "≡")
                    ("=>"      .    "⇒")
                    (">="      .    "≥")
                    (">>"      .    "≫")
                    (">>>"     .    "⋙")
                    ("Alpha"   .    "Α")
                    ("Beta"    .    "Β")
                    ("Chi"     .    "Χ")
                    ("Delta"   .    "Δ")
                    ("Epsilon" .    "Ε")
                    ("Eta"     .    "Η")
                    ("Gamma"   .    "Γ")
                    ("Iota"    .    "Ι")
                    ("Kappa"   .    "Κ")
                    ("Lambda"  .    "Λ")
                    ("Mu"      .    "Μ")
                    ("Nu"      .    "Ν")
                    ("Omega"   .    "Ω")
                    ("Omicron" .    "Ο")
                    ("Phi"     .    "Φ")
                    ("Pi"      .    "Π")
                    ("Psi"     .    "Ψ")
                    ("Rho"     .    "Ρ")
                    ("Sigma"   .    "Σ")
                    ("Tau"     .    "Τ")
                    ("Theta"   .    "Θ")
                    ("Upsilon" .    "Υ")
                    ("Xi"      .    "Ξ")
                    ("Zeta"    .    "Ζ")
                    ("_|_"     .    "⊥")
                    ("alpha"   .    "α")
                    ("beta"    .    "β")
                    ("chi"     .    "χ")
                    ("delta"   .    "γ")
                    ("epsilon" .    "ε")
                    ("eta"     .    "η")
                    ("gamma"   .    "γ")
                    ("iota"    .    "ι")
                    ("kappa"   .    "κ")
                    ("lambda"  .    "λ")
                    ("mu"      .    "μ")
                    ("nu"      .    "ν")
                    ("omega"   .    "ω")
                    ("omicron" .    "ο")
                    ("phi"     .    "φ")
                    ("pi"      .    "π")
                    ("psi"     .    "ψ")
                    ("rho"     .    "ρ")
                    ("sigma"   .    "σ")
                    ("tau"     .    "τ")
                    ("theta"   .    "θ")
                    ("upsilon" .    "υ")
                    ("xi"      .    "ξ")
                    ("zeta"    .    "ζ")
                    ("|->"     .    "↦")
                    ("|>"      .    "▷")
                    ("||"      .    "∨")
                    ("~>"      .    "⇝")
                    ("~~>"     .    "⟿")

                    ;; ("!!!"    .    "!!!")
                    ;; ("!=<"    .    "!=<")
                    ;; ("!=="    .    "!==")
                    ;; ("!>"     .    "!>")
                    ;; ("!≡"     .    "!≡")
                    ;; ("!≡≡"    .    "!≡≡")
                    ;; ("##"     .    "##")
                    ;; ("#("     .    "#(")
                    ;; ("#>"     .    "#>")
                    ;; ("#?"     .    "#?")
                    ;; ("#_"     .    "#_")
                    ;; ("#_("    .    "#_(")
                    ;; ("#{"     .    "#{")
                    ;; ("$>"     .    "$>")
                    ;; ("%<%"    .    "%<%")
                    ;; ("%="     .    "%=")
                    ;; ("%>"     .    "%>")
                    ;; ("%>%"    .    "%>%")
                    ;; ("&%"     .    "&%")
                    ;; ("&&&"    .    "&&&")
                    ;; ("&*"     .    "&*")
                    ;; ("&+"     .    "&+")
                    ;; ("&-"     .    "&-")
                    ;; ("&/"     .    "&/")
                    ;; ("&="     .    "&=")
                    ;; ("&>"     .    "&>")
                    ;; ("***"    .    "***")
                    ;; ("*/"     .    "*/")
                    ;; ("*="     .    "*=")
                    ;; ("*>"     .    "*>")
                    ;; ("++"     .    "++")
                    ;; ("+++"    .    "+++")
                    ;; ("++="    .    "++=")
                    ;; ("+="     .    "+=")
                    ;; ("+>"     .    "+>")
                    ;; ("-+-"    .    "-+-")
                    ;; ("--"     .    "–")
                    ;; ("---"    .    "—")
                    ;; ("-->"    .    "-->")
                    ;; ("-<"     .    "-<")
                    ;; ("-<<"    .    "-<<")
                    ;; ("-<|"    .    "-<|")
                    ;; ("-="     .    "-=")
                    ;; ("->>"    .    "->>")
                    ;; ("-\\/"   .    "-\\/")
                    ;; ("-|>"    .    "-|>")
                    ;; (".."     .    "..")
                    ;; ("..."    .    "...")
                    ;; ("..<"    .    "..<")
                    ;; (".="     .    ".=")
                    ;; (".>"     .    ".>")
                    ;; (".~"     .    ".~")
                    ;; ("/*"     .    "/*")
                    ;; ("/**"    .    "/**")
                    ;; ("//"     .    "//")
                    ;; ("///"    .    "///")
                    ;; ("/=="    .    "/==")
                    ;; ("/>"     .    "/>")
                    ;; (":("     .    ":(")
                    ;; (":)"     .    ":)")
                    ;; (":-("    .    ":-(")
                    ;; (":-)"    .    ":-)")
                    ;; (":/"     .    ":/")
                    ;; (":3"     .    ":3")
                    ;; ("::"     .    "::")
                    ;; (":::"    .    ":::")
                    ;; (":<:"    .    ":<:")
                    ;; (":="     .    ":=")
                    ;; (":=>"    .    ":=>")
                    ;; (":>"     .    ":>")
                    ;; (":>:"    .    ":>:")
                    ;; (":D"     .    ":D")
                    ;; (":P"     .    ":P")
                    ;; (":\\"    .    ":\\")
                    ;; (":≡"     .    ":≡")
                    ;; ("<!"     .    "<!")
                    ;; ("<!--"   .    "<!--")
                    ;; ("<!>"    .    "<!>")
                    ;; ("<#"     .    "<#")
                    ;; ("<#>"    .    "<#>")
                    ;; ("<$"     .    "<$")
                    ;; ("<$>"    .    "<$>")
                    ;; ("<%"     .    "<%")
                    ;; ("<%>"    .    "<%>")
                    ;; ("<&"     .    "<&")
                    ;; ("<&>"    .    "<&>")
                    ;; ("<*"     .    "<*")
                    ;; ("<**>"   .    "<**>")
                    ;; ("<*>"    .    "<*>")
                    ;; ("<+"     .    "<+")
                    ;; ("<+>"    .    "<+>")
                    ;; ("<--"    .    "<--")
                    ;; ("<-->"   .    "<-->")
                    ;; ("<-<"    .    "<-<")
                    ;; ("<->"    .    "<->")
                    ;; ("<."     .    "<.")
                    ;; ("<.>"    .    "<.>")
                    ;; ("</"     .    "</")
                    ;; ("</>"    .    "</>")
                    ;; ("<:"     .    "<:")
                    ;; ("<:>"    .    "<:>")
                    ;; ("<<-"    .    "<<-")
                    ;; ("<<="    .    "<<=")
                    ;; ("<<=="   .    "<<==")
                    ;; ("<<^"    .    "<<^")
                    ;; ("<<|"    .    "<<|")
                    ;; ("<<~"    .    "<<~")
                    ;; ("<=<"    .    "<=<")
                    ;; ("<=="    .    "<==")
                    ;; ("<==>"   .    "<==>")
                    ;; ("<?"     .    "<?")
                    ;; ("<?>"    .    "<?>")
                    ;; ("<@"     .    "<@")
                    ;; ("<@>"    .    "<@>")
                    ;; ("<\""    .    "<\"")
                    ;; ("<\">"   .    "<\">")
                    ;; ("<\\"    .    "<\\")
                    ;; ("<\\>"   .    "<\\>")
                    ;; ("<^"     .    "<^")
                    ;; ("<^>"    .    "<^>")
                    ;; ("<|-"    .    "<|-")
                    ;; ("<|>"    .    "<|>")
                    ;; ("<~<"    .    "<~<")
                    ;; ("=/="    .    "=/=")
                    ;; ("==<"    .    "==<")
                    ;; ("==>"    .    "==>")
                    ;; ("==>>"   .    "==>>")
                    ;; ("=>>"    .    "=>>")
                    ;; ("=~"     .    "=~")
                    ;; ("=~="    .    "=~=")
                    ;; (">!="    .    ">!=")
                    ;; (">-"     .    ">-")
                    ;; (">->"    .    ">->")
                    ;; (">=="    .    ">==")
                    ;; (">=>"    .    ">=>")
                    ;; (">>-"    .    ">>-")
                    ;; (">>^"    .    ">>^")
                    ;; (">>|"    .    ">>|")
                    ;; ("?."     .    "?.")
                    ;; ("?="     .    "?=")
                    ;; ("?>"     .    "?>")
                    ;; ("??"     .    "??")
                    ;; ("???"    .    "???")
                    ;; ("?~"     .    "?~")
                    ;; ("@>"     .    "@>")
                    ;; ("[["     .    "[[")
                    ;; ("\">"    .    "\">")
                    ;; ("\\/-"   .    "\\/-")
                    ;; ("\\>"    .    "\\>")
                    ;; ("\\\\"   .    "\\\\")
                    ;; ("]]"     .    "]]")
                    ;; ("^."     .    "^.")
                    ;; ("^.."    .    "^..")
                    ;; ("^<<"    .    "^<<")
                    ;; ("^="     .    "^=")
                    ;; ("^>"     .    "^>")
                    ;; ("^>>"    .    "^>>")
                    ;; ("^?"     .    "^?")
                    ;; ("fun"    .    "λ")
                    ;; ("|+|"    .    "|+|")
                    ;; ("|-"     .    "|-")
                    ;; ("|-->"   .    "|-->")
                    ;; ("|<<"    .    "|<<")
                    ;; ("|="     .    "|=")
                    ;; ("|==>"   .    "|==>")
                    ;; ("|=>"    .    "|=>")
                    ;; ("|>-"    .    "|>-")
                    ;; ("|>>"    .    "|>>")
                    ;; ("||-"    .    "||-")
                    ;; ("||>"    .    "||>")
                    ;; ("|||"    .    "|||")
                    ;; ("~="     .    "~=")
                    ;; ("~>>"    .    "~>>")
                    ;; ("≡:≡"    .    "≡:≡")
                    ;; ("≡≡"     .    "≡≡")
                    ;; ("≡≡≡"    .    "≡≡≡")
                    ))
            (prettify-symbols-mode)))

;; Load and configure the theme.
(setq spacemacs-theme-comment-bg nil
      spacemacs-theme-comment-italic t
      spacemacs-theme-custom-colors '((comment-light . "#2aa1ae")))

(load-theme 'spacemacs-light t)

;; Fix for `whitespace-mode' when using the `spacemacs-light' theme.
(add-hook 'whitespace-mode-hook (lambda ()
                                  (set-face-attribute 'whitespace-line nil
                                                      :background "#fae9c3"
                                                      :foreground nil)))

;; Fix for `fsharp-mode' when using the `spacemacs-light' theme.
(add-hook 'fsharp-mode-hook (lambda ()
                              (set-face-attribute 'fsharp-ui-operator-face nil
                                                  :foreground "#ba2f59")))


(doom-themes-neotree-config)
;; (doom-themes-visual-bell-config)
(doom-modeline-mode 1)
(setq doom-modeline-buffer-file-name-style 'relative-to-project
      doom-modeline-major-mode-icon nil)

(setq-default neo-autorefresh t)

;; See https://github.com/hlissner/emacs-solaire-mode
;; (require 'solaire-mode)
;; (solaire-global-mode 1)
;; (add-hook 'ediff-prepare-buffer-hook #'solaire-mode)
;; (add-hook 'after-revert-hook #'turn-on-solaire-mode)
;; (add-hook 'minibuffer-setup-hook #'solaire-mode-in-minibuffer)
;; (solaire-mode-swap-bg)
